<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Anáisis | Javi Moreno]]></title>
  <link href="http://javimoreno.me/blog/categories/anáisis/atom.xml" rel="self"/>
  <link href="http://javimoreno.me/"/>
  <updated>2014-04-06T23:57:51+00:00</updated>
  <id>http://javimoreno.me/</id>
  <author>
    <name><![CDATA[Javi Moreno]]></name>
    <email><![CDATA[javi@javimoreno.me]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

	
	<entry>
	  
		<title type="html"><![CDATA[Variables de entorno en Rails]]></title>
		<link href="http://javimoreno.me/blog/2013/03/25/variables-de-entorno-en-rails/"/>
		
	  <updated>2013-03-25T13:25:00+00:00</updated>
	  <id>http://javimoreno.me/blog/2013/03/25/variables-de-entorno-en-rails</id>
	  
	  <content type="html"><![CDATA[Cuando terminé la primera versión de URLHunter, tenía claro que compartir el código fuente del proyecto era básico. Principalmente por dos razones:     
Primero, porque que se aprende mucho viendo el código, quizá mas que siguiendo un tutorial.  
Segundo, porque me encantaría que la gente clonara el proyecto, hiciera forks, pull requests y enriqueciera URLHunter con sus aportaciones individuales.

Cuando lo iba a subir a GitHub caí en la cuenta de que los _tokens_, _consumer\_keys_, etc de Twitter los iba a poder ver cualquiera que echara un vistazo al fichero _twitter.rb_ y no solo eso, si en el futuro decidía incluir un formulario de contacto, integrar New Relic o Google Analytics los usuarios, contraseñas, identificadores únicos serían visibles para todo el mundo. Fue entonces cuando vi la importancia de las *_variables de entorno_* a las que hacían referencia en la documentación de la gema de Twitter.     

<!--more-->

El caso es que, por no hacerlo de primeras, para subir el repositorio a GitHub tuve que crear una rama nueva, cambiar los ficheros, asegurarme de que la rama principal nunca se sincronizaría con GitHub, etc. El problema añadido a esto es que todas los cambios que he ido haciendo al proyecto no los he podido sincronizar con la rama GitHub por falta de tiempo (o pereza, según se mire). En fin, que antes de que la cosa se complicará más había que actuar así que buscando un poco en internet he encontrado [este tutorial](http://railsapps.github.com/rails-environment-variables.html) que es el que voy a seguir para ocultar la información confidencial del proyecto.

La opción que he decidido desarrollar es la tercera, tiene un poco más de trabajo a la hora de desplegar en Heroku pero no es muy significativo.

Lo primero es crear el fichero _local\_env.yml_ e incluirlo en _.gitignore_ para que no lo veáis jamás. ;-)

<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>/config/local_env.yml  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1"># Rename this file to local_env.yml</span>
</span><span class='line'><span class="c1"># Add account settings and API keys here.</span>
</span><span class='line'><span class="c1"># This file should be listed in .gitignore to keep your settings secret!</span>
</span><span class='line'><span class="c1"># Each entry gets set as a local environment variable.</span>
</span><span class='line'><span class="c1"># This file overrides ENV variables in the Unix shell.</span>
</span><span class='line'><span class="c1"># For example, setting:</span>
</span><span class='line'><span class="c1"># GMAIL_USERNAME: &#39;Your_Gmail_Username&#39;</span>
</span><span class='line'><span class="c1"># makes &#39;Your_Gmail_Username&#39; available as ENV[&quot;GMAIL_USERNAME&quot;]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Twitter Variables</span>
</span><span class='line'><span class="l-Scalar-Plain">CONSUMER_KEY</span><span class="p-Indicator">:</span> <span class="s">&#39;Your_Consumer_Key&#39;</span>
</span><span class='line'><span class="l-Scalar-Plain">CONSUMER_SECRET</span><span class="p-Indicator">:</span> <span class="s">&#39;Your_Consumer_Secret&#39;</span>
</span><span class='line'><span class="l-Scalar-Plain">OAUTH_TOKEN</span><span class="p-Indicator">:</span> <span class="s">&#39;Your_Oauth_Token&#39;</span>
</span><span class='line'><span class="l-Scalar-Plain">OAUTH_TOKEN_SECRET</span><span class="p-Indicator">:</span> <span class="s">&#39;Your_Oauth_Token_Secret&#39;</span>
</span><span class='line'><span class="c1"># New Relic Parameters</span>
</span><span class='line'><span class="l-Scalar-Plain">NEW_RELIC_LICENSE_KEY</span><span class="p-Indicator">:</span> <span class="s">&#39;Your_New_Relic_License_Key&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

En el fichero podéis ver como no solo he creado variables de entorno para Twitter si no también para New Relic, eso es porque al margen de los cambios en el estilo de URLHunter, el uso de los Tweets Embeds y algunas mejoras en la cache también he incluido New Relic para monitorizar su comportamiento y buscar formas de mejorar el rendimiento.

Ahora hay que incluir las variables de entorno en los ficheros correspondientes. El fichero de configuración _twitter.rb_ quedará de la siguiente manera:

<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>/config/initializers/twitter.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Twitter</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">consumer_key</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;CONSUMER_KEY&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">consumer_secret</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;CONSUMER_SECRET&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">oauth_token</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;OAUTH_TOKEN&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">oauth_token_secret</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;OAUTH_TOKEN_SECRET&quot;</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

Y en el fichero de configuración de New Relic lo único que hay que tener en cuenta es que hay usar ruby embebido para nombra la variable de entorno:

<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>/config/newrelic.yml  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'>  <span class="c1"># You must specify the license key associated with your New Relic</span>
</span><span class='line'>  <span class="c1"># account.  This key binds your Agent&#39;s data to your account in the</span>
</span><span class='line'>  <span class="c1"># New Relic service.</span>
</span><span class='line'>  <span class="l-Scalar-Plain">license_key</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;%= ENV[&#39;NEW_RELIC_LICENSE_KEY&#39;] %&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

## Cargando las variables de entorno.

Para que la aplicación cargue las variables de entorno, tendremos que indicarle en el fichero de configuración que lo primero que tiene que hacer, antes que configurar cualquier otro ajuste es cargar las variables de nuestro fichero. Esto lo tendremos que hacer en el fichero _application.rb_:

<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>/config/application.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="c1"># Load the environment variables at beginning</span>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">before_configuration</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">env_file</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="p">,</span> <span class="s1">&#39;config&#39;</span><span class="p">,</span> <span class="s1">&#39;local_env.yml&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="no">YAML</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">env_file</span><span class="p">))</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="o">|</span>
</span><span class='line'>        <span class="no">ENV</span><span class="o">[</span><span class="n">key</span><span class="o">.</span><span class="n">to_s</span><span class="o">]</span> <span class="o">=</span> <span class="n">value</span>
</span><span class='line'>      <span class="k">end</span> <span class="k">if</span> <span class="no">File</span><span class="o">.</span><span class="n">exists?</span><span class="p">(</span><span class="n">env_file</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

Si hemos hecho todo esto correctamente, al ejecutar la aplicación en local todo debería funcionar perfectamente. El problema nos lo vamos a encontrar cuando despleguemos en Heroku. Heroku se apoya en el fichero git de nuestro proyecto para tomar toda la información. Del mismo modo que el fichero donde hemos incluido las variables de entorno no es visible en el repositorio (GitHub, Bitbucket,...) tampoco lo es para Heroku por lo que las variables de entorno nunca se cargarán al iniciar la aplicación. Hemos de cargar estas variables de forma manual.

<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Carga de variables de entorno en Heroku  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>heroku config:add <span class="nv">CONSUMER_KEY</span><span class="o">=</span><span class="s1">&#39;Your_Consumer_Key&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

Podemos hacer un fichero bash que ejecutaremos después de hacer el despliegue en heroku. Este script tendría la siguiente estructura:

<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Script para cargar variables de entorno en Heroku heroku.sh  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>heroku config:add <span class="nv">CONSUMER_KEY</span><span class="o">=</span><span class="s1">&#39;Your_Consumer_Key&#39;</span> <span class="nv">CONSUMER_SECRET</span><span class="o">=</span><span class="s1">&#39;Your_Consumer_Secret&#39;</span> <span class="nv">OAUTH_TOKEN</span><span class="o">=</span><span class="s1">&#39;Your_Oauth_Token&#39;</span> <span class="nv">OAUTH_TOKEN_SECRET</span><span class="o">=</span><span class="s1">&#39;Your_Oauth_Token_Secret&#39;</span> <span class="nv">NEW_RELIC_LICENSE_KEY</span><span class="o">=</span><span class="s1">&#39;Your_New_Relic_License_Key&#39;</span>;
</span><span class='line'>heroku info --app urlhunter-314159;
</span></code></pre></td></tr></table></div></figure></notextile></div>

Y lo ejecutamos escribiendo en el terminal:

<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Script para cargar variables de entorno en Heroku  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sh heroku.sh
</span></code></pre></td></tr></table></div></figure></notextile></div>

Listo. Ya podemos compartir el código fuente del proyecto sin temor a que nadie pueda hacer uso de nuestras claves de terceros.]]></content>
		
	</entry>
	
</feed>
